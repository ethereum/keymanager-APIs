get:
  operationId: ListRemoteKeys
  summary: List Remote Keys.
  description: |
    List all remote validating pubkeys known to this validator client binary
  security:
    - bearerAuth: []
  tags:
    - Remote Key Manager
  responses:
    "200":
      description: Success response
      content:
        application/json:
          schema:
            title: ListRemoteKeysResponse
            type: object
            required: [data]
            properties:
              data:
                type: array
                items:
                  $ref: "../keymanager-oapi.yaml#/components/schemas/SignerDefinition"
    "401":
      $ref: "../keymanager-oapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../keymanager-oapi.yaml#/components/responses/Forbidden"
    "500":
      $ref: "../keymanager-oapi.yaml#/components/responses/InternalError"

post:
  operationId: ImportRemoteKeys
  summary: Import Remote Keys.
  description: |
    Import remote keys for the validator client to request duties for.
  security:
    - bearerAuth: []
  tags:
    - Remote Key Manager
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required: [remote_keys]
          properties:
            remote_keys:
              type: array
              items:
                $ref: "../keymanager-oapi.yaml#/components/schemas/SignerDefinition"
  responses:
    "200":
      description: Success response
      content:
        application/json:
          schema:
            title: ImportRemoteKeysResponse
            type: object
            required: [data]
            properties:
              data:
                type: array
                description: Status result of each `request.remote_keys` with same length and order of `request.remote_keys`
                items:
                  type: object
                  required: [status]
                  properties:
                    status:
                      type: string
                      description: |
                        - imported: Remote key successfully imported to validator client permanent storage
                        - duplicate: Remote key's pubkey is already known to the validator client
                        - error: Any other status different to the above: I/O errors, etc.
                      enum:
                        - imported
                        - duplicate
                        - error
                      example: imported
                    message:
                      type: string
                      description: error message if status == error
    "401":
      $ref: "../keymanager-oapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../keymanager-oapi.yaml#/components/responses/Forbidden"
    "500":
      $ref: "../keymanager-oapi.yaml#/components/responses/InternalError"

delete:
  operationId: DeleteRemoteKeys
  summary: Delete Remote Keys.
  description: |
    DELETE must delete all keys from `request.pubkeys` that are known to the validator client and exist in its
    persistent storage.

    DELETE should never return a 404 response, even if all pubkeys from request.pubkeys have no existing keystores.
  security:
    - bearerAuth: []
  tags:
    - Remote Key Manager
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required: [pubkeys]
          properties:
            pubkeys:
              type: array
              description: List of public keys to delete.
              items:
                $ref: '../keymanager-oapi.yaml#/components/schemas/Pubkey'
  responses:
    "200":
      description: Success response
      content:
        application/json:
          schema:
            title: DeleteRemoteKeysResponse
            type: object
            required: [data]
            properties:
              data:
                type: array
                description: Deletion status of all keys in `request.pubkeys` in the same order.
                items:
                  type: object
                  required: [status]
                  properties:
                    status:
                      type: string
                      description: |
                        - deleted: key was active and removed
                        - not_found: key was not found to be removed
                        - error: unexpected condition meant the key could not be removed (the key was actually found,
                          but we couldn't stop using it) - this would be a sign that making it active elsewhere would
                          almost certainly cause you headaches / slashing conditions etc.
                      enum:
                        - deleted
                        - not_found
                        - error
                      example: deleted
                    message:
                      type: string
                      description: error message if status == error
    "401":
      $ref: "../keymanager-oapi.yaml#/components/responses/Unauthorized"
    "403":
      $ref: "../keymanager-oapi.yaml#/components/responses/Forbidden"
    "500":
      $ref: "../keymanager-oapi.yaml#/components/responses/InternalError"
